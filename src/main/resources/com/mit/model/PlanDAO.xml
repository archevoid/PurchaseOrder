<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper
	PUBLIC "-//mybatis.org//DTD Config 3.0//EN"
	"http://mybatis.org/dtd/mybatis-3-mapper.dtd">
	
<mapper namespace="com.mit.model.PlanDAO">

	<sql id="searchPlan">
		<trim prefixOverrides="AND">
			<if test="initialDueDate != null">
			<![CDATA[
				AND #{ initialDueDate } < sp.deliverydate
			]]>
			</if>
			<if test="finalDueDate != null">
			<![CDATA[
				AND sp.deliverydate < #{ finalDueDate }
			]]>
			</if>
			<if test="partName != null">
				AND pt.partname LIKE '%'||#{ partName }||'%'
			</if>
			<if test="partCode != null">
				AND pt.partcode = #{ partCode }
			</if>
		</trim>
	</sql>

	<select id="getPlan" resultType="com.mit.model.PlanDTO">
		SELECT tbl.planNum AS planNum
			, tbl.requirement AS requirement
			, tbl.dueDate AS dueDate
			, tbl.partname AS partName
			, tbl.sum AS sum
			, tbl.inputQuantity AS inputQuantity
			, tbl.today AS today
		FROM (SELECT sp.supportno AS planNum
			, sp.requirement AS requirement
			, sp.deliverydate AS dueDate
			, pt.partname AS partName
			, NVL(tbl.sum, 0) AS sum
			, NVL(tb.inputQuantity, 0) AS inputQuantity
			, sysdate AS today
			, ROWNUM as rn
		FROM tbl_support sp INNER JOIN tbl_part pt ON sp.partcode = pt.partcode
			LEFT JOIN (SELECT p.support_num AS planNum,  ct.unitprice * p.order_quantity AS sum FROM purchase_order p INNER JOIN tbl_contract ct ON p.contract_num = ct.contractno) tbl
				ON tbl.planNum = sp.supportno
			LEFT JOIN (SELECT SUM(p.order_quantity) AS inputQuantity, p.support_num AS support_num FROM purchase_order p GROUP BY p.support_num) tb ON tb.support_num = sp.supportno
		<trim prefix="WHERE">
			<include refid="searchPlan" />
		</trim>
		ORDER BY sp.deliverydate DESC, sp.supportno) tbl
	<![CDATA[
		WHERE (#{ curPageDto.pageNum } - 1) * #{ curPageDto.amount } < tbl.rn AND tbl.rn <= (#{ curPageDto.pageNum }) * #{ curPageDto.amount }
	]]>
	</select>
	
	<select id="countPlan" resultType="long">
		SELECT COUNT(*)
		FROM tbl_support sp INNER JOIN tbl_part pt ON sp.partcode = pt.partcode
		<trim prefix="WHERE">
			<include refid="searchPlan" />
		</trim>
	</select>


	<select id="getAllPlanNum" resultType="long">
		SELECT supportNo AS planNum
		FROM tbl_support
	</select>
	
	<select id="getPlanByPlanNum" resultType="com.mit.model.PlanDTO">
		SELECT s.supportNo AS planNum
			, s.requirement AS requirement
			, s.deliverydate AS deliveryDate
			, (SELECT partName FROM tbl_part p WHERE p.partcode = s.partcode) AS partname
		FROM tbl_support s
		WHERE s.supportno = #{ planNum }
	</select>
	
	<select id="getPartInPlan" resultType="com.mit.model.PlanDTO">
		SELECT pt.partname
			, pt.partcode
		FROM tbl_part pt
	</select>
	
	<select id="getCompanyInfo" resultType="com.mit.model.CompanyDTO">
		SELECT ct.contractNo AS contractNum
			, ct.unitprice AS unitPrice
			, cp.name AS companyName
			, cp.code AS companyCode
			, cp.currency AS contractCurrency
			, cp.account AS companyAccount
			, cp.business_number AS businessNum
			, ct.partssupply AS leadTime
			, ct.transferconditions AS transferCondition
			, cp.comemployee AS comEmployee
			, cp.comemail AS comEamil
			, NVL((SELECT 1 FROM purchase_order p WHERE p.support_num = #{ planNum } AND p.contract_num = ct.contractno), 0) AS existance
		FROM tbl_contract ct INNER JOIN tbl_company cp ON ct.code = cp.code
			
		WHERE ct.partcode = (SELECT s.partcode FROM tbl_support s WHERE s.supportno = ${ planNum })
	</select>
	
	<insert id="insertOrder">
		<selectKey keyProperty="scheduledNum" order="BEFORE" resultType="long">
			SELECT scheduled_num_seq.NEXTVAL FROM dual
		</selectKey>
		INSERT INTO purchase_order(scheduled_num, scheduled_date, order_quantity, empl_num, support_num, contract_num)
		VALUES (#{ scheduledNum }, #{ scheduledDate }, #{ orderQuantity }, #{ emplNum }, #{ planNum }, #{ contractNum })
	</insert>
	
	<select id="getEmpl" resultType="com.mit.model.UserDTO">
		SELECT DISTINCT e.empl_num AS emplNum
			, e.empl_name AS emplName
		    , e.empl_email AS email
		    , (SELECT COUNT(DISTINCT p.order_date) FROM purchase_order o WHERE o.empl_num = e.empl_num) AS sameDay
		    , (SELECT COUNT(*) FROM tbl_company c WHERE c.code IN (SELECT ct.code FROM tbl_contract ct WHERE ct.contractno IN (SELECT po.contract_num FROM purchase_order po WHERE po.empl_num = p.empl_num))) AS sameCompany
		FROM employee e LEFT JOIN purchase_order p ON e.empl_num = p.empl_num
		ORDER BY e.empl_num ASC
	</select>
	
	<select id="getEmailByEmplNum" resultType="com.mit.model.UserDTO">
		SELECT e.empl_email AS email FROM employee e WHERE empl_num = #{ emplNum }
	</select>
	
	<select id="getTotalPrice" resultType="com.mit.model.OrderDTO">
		SELECT (SELECT cp.currency FROM tbl_company cp WHERE cp.code = (SELECT ct.code FROM tbl_contract ct WHERE ct.contractno = p.contract_num)) AS contractCurrency
		    , (SELECT SUM(p.order_quantity * (SELECT ct.unitprice FROM tbl_contract ct WHERE ct.contractno = p.contract_num)) AS totalPrice
		        FROM purchase_order p
		        GROUP BY p.support_num) AS totalPrice
		FROM purchase_order p
		WHERE p.support_num = #{ planNum }
		
		
		UNION ALL
				
		SELECT 'other' AS contractCurrency, 0 AS totalPrice FROM DUAL WHERE NOT EXISTS (SELECT * FROM purchase_order p WHERE p.support_num = #{ planNum } GROUP BY p.support_num)
	</select>
	
	<select id="getRemainInfo" resultType="com.mit.model.PlanDTO">
		SELECT NVL(sp.requirement - (SELECT SUM(p.order_quantity) FROM purchase_order p WHERE p.support_num = sp.supportno GROUP BY p.support_num), sp.requirement) AS remainQuantity
			, sp.deliveryDate AS dueDate
		FROM tbl_support sp
		WHERE supportno = #{ planNum }
	</select>
	
	<select id="getOrderable" resultType="boolean">
	<![CDATA[
		SELECT CASE WHEN (sysdate + ct.partssupply) > (SELECT sp.deliverydate FROM tbl_support sp WHERE sp.supportno = #{ planNum }) THEN 0 ELSE 1 END AS orderable
	]]>
		FROM tbl_contract ct
		WHERE ct.contractno = #{ contractNum }
	</select>
	
	<select id="getCurrentOrder" resultType="com.mit.model.OrderDTO">
		SELECT p.order_date AS orderDate
			, sp.due_date AS dueDate
			, p.order_quantity AS orderQuantity
			, e.empl_num AS emplNum
			, e.empl_name AS emplName
			, e.empl_email AS email
			, (SELECT c.unitprice FROM tbl_contract c WHERE c.contractno = p.contract_num) AS unitPrice
		FROM purchase_order p INNER JOIN employee e ON p.empl_num = e.empl_num
			INNER JOIN tbl_support sp ON p.support_num = sp.supportno
		WHERE p.support_num = #{ planNum } AND p.contract_num = #{ contractNum }
	</select>
</mapper>