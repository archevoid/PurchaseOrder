<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper
	PUBLIC "-//mybatis.org//DTD Config 3.0//EN"
	"http://mybatis.org/dtd/mybatis-3-mapper.dtd">
	
<mapper namespace="com.mit.model.OrderDAO">
	<sql id="searchOrder">
		<trim prefixOverrides="AND">
			<if test="initialDueDate != null">
			<![CDATA[
				AND #{ initialDueDate } < sp.deliverydate
			]]>
			</if>
			<if test="finalDueDate != null">
			<![CDATA[
				AND sp.deliverydate < #{ finalDueDate }
			]]>
			</if>
			<if test="initialScheduledDate != null">
			<![CDATA[
				AND #{ initialScheduledDate } < p.scheduled_date
			]]>
			</if>
			<if test="finalScheduledDate != null">
			<![CDATA[
				AND p.scheduled_date < #{ finalScheduledDate }
			]]>
			</if>
			<if test="partName != null">
				AND pt.partname LIKE '%'||#{ partName }||'%'
			</if>
			<if test="partCode != null">
				AND pt.partcode = #{ partCode }
			</if>
			<if test="companyCode != null">
				AND cp.code = #{ companyCode }
			</if>
			<if test="companyName != null">
				AND cp.name LIKE '%'||#{ companyName }||'%'
			</if>
			<if test="emplNum != null">
				AND e.empl_num = #{ emplNum }
			</if>
			<if test="emplName != null">
				AND e.empl_name LIKE '%'||#{ emplName }||'%'
			</if>
		</trim>
	</sql>

	<select id="getOrder" resultType="com.mit.model.OrderDTO">
		SELECT *
		FROM (SELECT p.scheduled_num AS scheduledNum
				, e.empl_num AS emplNum
				, e.empl_name AS emplName
				, e.empl_email AS email
				, cp.name AS companyName
				, cp.code AS companyCode
				, cp.owner AS owner
				, cp.contact AS contact
				, cp.business_number AS businessNumber
				, p.scheduled_date AS scheduledDate
				, p.published AS published
				, sp.deliverydate AS dueDate
				, ct.unitprice AS unitPrice
				, pt.partname AS partName
				, p.order_quantity AS orderQuantity
				, cp.account AS account
				, cp.currency AS currency
				, ct.partsSupply AS leadTime
				, p.order_date AS orderDate
				, p.order_num AS orderNum
				, sysdate AS today
				, CASE
					WHEN (SELECT MAX(ir.close) FROM inspection_result ir WHERE ir.order_num = p.order_num) = 1
						THEN 4
				<![CDATA[
                    WHEN p.published != 0 THEN 1
					WHEN (SELECT i.inspection_date FROM inspection i WHERE i.order_num = p.order_num) <= sysdate AND sysdate < (SELECT i.inspection_date FROM inspection i WHERE i.order_num = p.order_num)
                        THEN (SELECT i.inspection_num + 1000 FROM inspection i WHERE i.inspection_date <= sysdate AND sysdate < i.inspection_date)
					ELSE 0
				]]>
				END AS status
				, p.emergency AS emergency
				, ROWNUM AS rn
			FROM purchase_order p INNER JOIN tbl_contract ct ON p.contract_num = ct.contractno
				INNER JOIN tbl_company cp ON ct.code = cp.code
				INNER JOIN employee e ON e.empl_num = p.empl_num
				INNER JOIN tbl_support sp ON p.support_num = sp.supportno
				INNER JOIN tbl_part pt ON ct.partcode = pt.partcode
				LEFT JOIN warehousing wh ON p.order_num = wh.order_num
				<trim prefix="WHERE">
					<include refid="searchOrder" />
				</trim>
				ORDER BY emergency DESC, sp.deliverydate DESC, p.scheduled_num
				) tbl
		<![CDATA[
		WHERE (#{ curPageDto.pageNum } - 1) * #{ curPageDto.amount } < tbl.rn AND tbl.rn <= (#{ curPageDto.pageNum }) * #{ curPageDto.amount }
		]]>
	</select>

	<select id="countOrder" resultType="long">
		SELECT COUNT(*)
		FROM purchase_order p INNER JOIN tbl_contract ct ON p.contract_num = ct.contractno
			INNER JOIN tbl_company cp ON ct.code = cp.code
			INNER JOIN employee e ON e.empl_num = p.empl_num
			INNER JOIN tbl_support sp ON p.support_num = sp.supportno
			INNER JOIN tbl_part pt ON ct.partcode = pt.partcode
		<trim prefix="WHERE">
			<include refid="searchOrder" />
		</trim>
	</select>
	
	<update id="updatePublished">
		UPDATE purchase_order SET published = 1, order_date = sysdate, order_num = order_num_seq.NEXTVAL
		WHERE scheduled_num = #{ scheduledNum } AND order_num IS NULL
	</update>
	
	<select id="getOrderNum" resultType="com.mit.model.OrderDTO">
		SELECT p.order_num AS orderNum FROM purchase_order p WHERE p.scheduled_num = #{ scheduledNum }
	</select>
	
	<select id="getAllPart" resultType="com.mit.model.OrderDTO">
		SELECT pt.partname AS partName
			, pt.partcode AS partCode
		FROM tbl_part pt
	</select>
	
	<select id="getAllCompany" resultType="com.mit.model.OrderDTO">
		SELECT cp.code AS companyCode
			, cp.name AS companyName
		FROM tbl_company cp
	</select>
	
	<select id="getOurCompany" resultType="com.mit.model.CompanyDTO">
		SELECT cp.name AS companyName, cp.contact AS contact, cp.address AS companyAddress
		FROM tbl_company cp
		WHERE cp.code = 0
	</select>
	
	<select id="getResetOrderData" resultType="com.mit.model.OrderDTO">
		SELECT p.empl_num AS emplNum
			, p.scheduled_date AS scheduledDate
		FROM purchase_order p
		WHERE p.order_num = #{ orderNum }
	</select>
	
	<update id="updateOrder">
		UPDATE purchase_order SET scheduled_date = #{ scheduledDate }, order_quantity = #{ orderQuantity }, empl_num = #{ emplNum }, contract_num = #{ contractNum }
		WHERE scheduled_num = #{ scheduledNum }
	</update>
	


	<select id="getCompany" resultType="com.mit.model.CompanyDTO">
		SELECT DISTINCT ct.code AS companyCode
			, (SELECT cp.name FROM tbl_company cp WHERE cp.code = ct.code) AS companyName
		FROM tbl_contract ct
	</select>
	
	<select id="getOrderByMonth" resultType="com.mit.model.OrderDTO">
		SELECT p.order_num AS orderNum
			, p.scheduled_date AS scheduledDate
			, (SELECT pt.partname FROM tbl_part pt WHERE pt.partcode = ct.partcode) AS partName
			, (SELECT cp.name FROM tbl_company cp WHERE cp.code = ct.code) AS companyName
			, ct.code AS companyCode
		FROM purchase_order p INNER JOIN tbl_contract ct ON p.contract_num = ct.contractno
		<![CDATA[
			WHERE #{ date } <= p.scheduled_date AND p.scheduled_date <= LAST_DAY(#{ date })
			ORDER BY p.scheduled_date DESC
		]]>
	</select>
	
	<select id="getOrderInfo" resultType="com.mit.model.OrderDTO">
		SELECT e.empl_name AS emplName
			, e.empl_email AS email
			, cp.name AS companyName
			, cp.owner AS owner
			, cp.contact AS contact
			, cp.business_number AS businessNumber
			, p.scheduled_date AS scheduledDate
			, sp.deliverydate AS dueDate
			, ct.unitprice AS unitPrice
			, (SELECT pt.partname FROM tbl_part pt WHERE pt.partcode = ct.partcode) AS partName
			, p.order_quantity AS orderQuantity
			, cp.account AS account
			, cp.currency AS currency
			, cp.comemployee AS comEmployee
			, cp.comemail AS comEmail
			, p.order_num AS orderNum
		FROM purchase_order p INNER JOIN tbl_contract ct ON p.contract_num = ct.contractno
			INNER JOIN tbl_company cp ON ct.code = cp.code
			INNER JOIN employee e ON e.empl_num = p.empl_num
			INNER JOIN tbl_support sp ON sp.supportno = p.support_num
		WHERE cp.code = #{ companyCode } AND p.scheduled_date = #{ scheduledDate }
	</select>
	
	<select id="searchOrderProgress" resultType="com.mit.model.OrderDTO">
		SELECT *
		FROM (SELECT pt.partname AS partName
		    , e.empl_name AS emplName
		    , e.empl_email AS email
		    , p.scheduled_num AS scheduledNum
		    , p.order_num AS orderNum
		    , cp.name AS companyName
		    , p.scheduled_date AS scheduledDate
		    , sp.deliverydate AS dueDate
		    , p.order_quantity AS orderQuantity
		    , NVL((SELECT SUM(i.inspection_quantity) AS completeQuantity FROM inspection i 
                WHERE i.order_num = p.order_num AND i.inspection_num IN (SELECT ir.inspection_num FROM inspection_result ir WHERE i.order_num = ir.order_num)
                GROUP BY i.order_num), 0) AS completeQuantity
            , ROWNUM AS rn
            <!-- , CASE
            	WHEN (SELECT COUNT(*) FROM inspection_result ispr WHERE ispr.order_num = ir.order_num) = 0
            	THEN NVL(ir.progress, 0)
            	ELSE 0
            	END AS progress -->
           	, ir.progress AS progress
		FROM purchase_order p INNER JOIN employee e ON p.empl_num = e.empl_num
			LEFT JOIN inspection_result ir ON p.order_num = ir.order_num
		    INNER JOIN tbl_contract ct ON p.contract_num = ct.contractno
		    INNER JOIN tbl_part pt ON ct.partcode = pt.partcode
		    INNER JOIN tbl_company cp ON ct.code = cp.code
			INNER JOIN tbl_support sp ON p.support_num = sp.supportno

		    
	    <where>
	    	<include refid="searchProgress" />
	    </where>
	    ) tbl
	    <![CDATA[
		WHERE (#{ curPageDto.pageNum } - 1) * #{ curPageDto.amount } < tbl.rn AND tbl.rn <= (#{ curPageDto.pageNum }) * #{ curPageDto.amount }
		]]>
	</select>
	
	<select id="countProgress" resultType="long">
		SELECT COUNT(*)
		FROM purchase_order p INNER JOIN employee e ON p.empl_num = e.empl_num
			LEFT JOIN inspection_result ir ON p.order_num = ir.order_num
		    INNER JOIN tbl_contract ct ON p.contract_num = ct.contractno
		    INNER JOIN tbl_part pt ON ct.partcode = pt.partcode
		    INNER JOIN tbl_company cp ON ct.code = cp.code
			INNER JOIN tbl_support sp ON p.support_num = sp.supportno
		<where>
	    	<include refid="searchProgress" />
	    </where>
	</select>
	
	<sql id="searchProgress">
		<trim prefixOverrides="AND">
			AND ir.inspection_num = (SELECT MAX(ispr.inspection_num) FROM inspection_result ispr WHERE ispr.order_num = p.order_num)
			<if test="partName != null">
				AND pt.partname LIKE '%'||#{ partName }||'%'
			</if>
			<if test="emplName != null">
				AND e.empl_name LIKE '%'||#{ emplName }||'%'
			</if>
			<if test="companyName != null">
    			AND cp.name LIKE '%'||#{ companyName }||'%'
    		</if>
			<if test="orderNum != null">
				AND i.order_num = #{ orderNum }
			</if>
			<if test="initialDueDate != null">
			<![CDATA[
				AND #{ initialDueDate } < sp.deliverydate
			]]>
			</if>
			<if test="finalDueDate != null">
			<![CDATA[
				AND sp.deliverydate < #{ finalDueDate }
			]]>
			</if>
			<if test="initialScheduledDate != null">
			<![CDATA[
				AND #{ initialScheduledDate } < p.scheduled_date
			]]>
			</if>
			<if test="finalScheduledDate != null">
			<![CDATA[
				AND p.scheduled_date < #{ finalScheduledDate }
			]]>
			</if>
		</trim>
	</sql>
	
	<select id="getScheduleInfo" resultType="com.mit.model.OrderDTO">
		SELECT pt.partname AS partName
			, sp.deliverydate AS dueDate
			, sp.requirement AS requirement
			, p.empl_num AS emplNum
			, (SELECT cp.name AS companyName FROM tbl_company cp WHERE cp.code = ct.code) AS companyName
			, ct.code AS companyCode
			, p.scheduled_date AS scheduledDate
			, p.order_quantity AS orderQuantity
			, ct.contractno AS contractNum
			, ct.unitprice AS unitPrice
			, NVL(sp.requirement - (SELECT SUM(p.order_quantity) FROM purchase_order p WHERE p.support_num = sp.supportno GROUP BY p.support_num), sp.requirement) AS remainQuantity
		FROM tbl_support sp INNER JOIN tbl_part pt ON sp.partcode = pt.partcode
			LEFT JOIN purchase_order p ON p.support_num = sp.supportno
			INNER JOIN tbl_contract ct ON p.contract_num = ct.contractno
		WHERE sp.supportno = (SELECT p.support_num FROM purchase_order p WHERE p.scheduled_num = #{ scheduledNum })
	</select>
</mapper>