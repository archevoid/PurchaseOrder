<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper
	PUBLIC "-//mybatis.org//DTD Config 3.0//EN"
	"http://mybatis.org/dtd/mybatis-3-mapper.dtd">
	
<mapper namespace="com.mit.model.InspectionDAO">
	<select id="getNotFinishedOrder" resultType="com.mit.model.OrderDTO">
		SELECT p.order_num AS orderNum
		    , pt.partname AS partName
		FROM purchase_order p INNER JOIN tbl_support sp ON p.support_num = sp.supportno
		    INNER JOIN tbl_part pt ON pt.partcode = sp.partcode
		    LEFT JOIN (SELECT i.order_num AS order_num, COUNT(i.inspection_num) AS countInspection, COUNT(ir.inspection_num) AS countResult
		        FROM inspection i INNER JOIN inspection_result ir ON i.order_num = ir.order_num
		        GROUP BY i.order_num) sc ON p.order_num = sc.order_num
		<![CDATA[
			WHERE sysdate < sp.deliverydate OR sc.countInspection != sc.countResult
		]]>
	</select>
	
	<select id="getInspectionByOrderNum" resultType="com.mit.model.InspectionDTO">
		SELECT p.order_num AS orderNum
		    , e.empl_name AS emplName
		    , e.empl_email AS email
		    , pt.partName AS partName
		    , p.order_quantity AS orderQuantity
		    , i.inspection_num AS inspectionNum
		    , i.inspection_date AS inspectionDate
		    , i.inspection_quantity AS inspectionQuantity
		    , i.sample_quantity AS sampleQuantity
		    , NVL((SELECT 1 FROM inspection_result ir WHERE ir.order_num = i.order_num AND ir.inspection_num = i.inspection_num), 0) AS existance
	    <![CDATA[
	    	, CASE 
	    		WHEN sysdate < i.inspection_date THEN '시작 전'
	    		WHEN sysdate > p.due_date THEN '종료 후'
	    		ELSE '진행 중' END AS progress
    	]]>
		FROM inspection i RIGHT JOIN purchase_order p ON p.order_num = i.order_num 
		    INNER JOIN employee e ON p.empl_num = e.empl_num
		    INNER JOIN tbl_contract ct ON p.contract_num = ct.contractno
		    INNER JOIN tbl_part pt ON ct.partcode = pt.partcode
		WHERE p.order_num =  #{ orderNum }
	</select>
	
	<select id="getInspectionSchedule" resultType="com.mit.model.InspectionDTO">
		SELECT i.order_num AS orderNum
		    , i.inspection_num AS inspectionNum
		    , i.inspection_date AS inspectionDate
		    , i.inspection_quantity AS inspectionQuantity
		    , i.sample_quantity AS sampleQuantity
		FROM inspection i
		WHERE i.order_num = #{ orderNum } AND i.inspection_num = #{ inspectionNum }
	</select>
	
	<select id="getInspectionResult" resultType="com.mit.model.InspectionDTO">
		SELECT ir.order_num AS orderNum
		    , ir.inspection_num AS inspectionNum
		    , ir.inspection_defect AS inspectionDefect
		    , ir.complement AS complement
		    , ir.close AS close
		FROM inspection_result ir
		WHERE ir.order_num = #{ orderNum } AND ir.inspection_num = #{ inspectionNum }
	</select>
	
	<insert id="insertInspectionSchedule">
		INSERT INTO inspection (order_num, inspection_num, inspection_date, inspection_quantity, sample_quantity)
		VALUES (#{ orderNum }, (SELECT NVL((MAX(i.inspection_num) + 1), 1) AS nextNum FROM inspection i WHERE i.order_num = #{ orderNum }), #{ inspectionDate }, #{ inspectionQuantity }, #{ sampleQuantity })
	</insert>
	
	<insert id="insertInspectionResult">
		INSERT INTO inspection_result (order_num, inspection_num, inspection_defect, complement, close)
		VALUES (#{ orderNum }, #{ inspectionNum }, #{ inspectionDefect }, #{ complement }, #{ close })
	</insert>
	
	<select id="getNextInspectionNum" resultType="int">
		SELECT NVL((MAX(i.inspection_num) + 1), 1) AS nextNum FROM inspection i WHERE i.order_num = #{ orderNum }
	</select>
	<select id="getNextInspectionResultNum" resultType="int">
		SELECT NVL((MAX(ir.inspection_num) + 1), 1) AS nextNum FROM inspection_result ir WHERE ir.order_num = #{ orderNum }
	</select>
</mapper>