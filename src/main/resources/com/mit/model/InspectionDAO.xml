<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper
	PUBLIC "-//mybatis.org//DTD Config 3.0//EN"
	"http://mybatis.org/dtd/mybatis-3-mapper.dtd">
	
<mapper namespace="com.mit.model.InspectionDAO">
		
	<sql id="searchInspection">
		<trim prefixOverrides="AND">
			<if test="initialInspectionDate != null">
			<![CDATA[
				AND #{ initialInspectionDate } < i.inspection_date
			]]>
			</if>
			<if test="finalInspectionDate != null">
			<![CDATA[
				AND i.inspection_date < #{ finalInspectionDate }
			]]>
			</if>
			<if test="orderNum != null">
				AND i.order_num = #{ orderNum }
			</if>
			<if test="inspectionNum != null">
				AND i.inspection_num = #{ inspectionNum }
			</if>
		</trim>
	</sql>

	<select id="getTotalInspectionQuantity" resultType="com.mit.model.InspectionDTO">
		SELECT p.order_quantity AS orderQuantity
		    , (SELECT SUM(ir.inspection_quantity) AS totalInspectionQuantity
				FROM inspection_result ir WHERE ir.order_num = p.order_num)
		FROM purchase_order p 
		WHERE p.order_num = #{ orderNum } 
	</select>

	<select id="getOrderAllNum" resultType="com.mit.model.OrderDTO">
		SELECT DISTINCT p.order_num AS orderNum
		FROM purchase_order p
	</select>
	
	<select id="getInspectionByOrderNum" resultType="com.mit.model.InspectionDTO">
		SELECT p.order_num AS orderNum
		    , e.empl_name AS emplName
		    , e.empl_email AS email
		    , pt.partName AS partName
		    , p.order_quantity AS orderQuantity
		    , i.inspection_num AS inspectionNum
		    , i.inspection_date AS inspectionDate
		    , i.inspection_quantity AS inspectionQuantity
		    , i.sample_quantity AS sampleQuantity
		    , NVL((SELECT SUM(ip.inspection_quantity) FROM inspection ip WHERE ip.order_num = p.order_num) / sp.requirement * 100, 0) AS progress
	    	, CASE WHEN (SELECT 1 FROM inspection ip 
				WHERE ip.order_num = i.order_num 
					AND ip.inspection_num = i.inspection_num 
					AND ip.inspection_num IN (SELECT ipr.inspection_num FROM inspection_result ipr WHERE ipr.order_num = ip.order_num))
				= 1 THEN '종료'
		<![CDATA[
    		WHEN sysdate < i.inspection_date THEN '시작 전'
    		WHEN sysdate > sp.deliverydate THEN '종료 후'
		]]>
    		ELSE '진행 중' END AS status
		FROM inspection i RIGHT JOIN purchase_order p ON p.order_num = i.order_num 
		    INNER JOIN employee e ON p.empl_num = e.empl_num
		    INNER JOIN tbl_contract ct ON p.contract_num = ct.contractno
		    INNER JOIN tbl_part pt ON ct.partcode = pt.partcode
		    INNER JOIN tbl_support sp ON sp.supportno = p.support_num
		
		<where>
			1 = 1
			<if test="inspectionNumList != null">
				<trim prefix="AND (" suffix=")">
					<trim prefixOverrides="OR">
						<foreach collection="inspectionNumList" item="unitNum">
							OR i.inspection_num = #{ unitNum }
						</foreach>
					</trim>
				</trim>
			</if>
		</where>
		ORDER BY i.inspection_num ASC
	</select>
	
	<select id="getInspectionForDownloadSchedule" resultType="com.mit.model.InspectionDTO">
		SELECT p.order_num AS orderNum
		    , e.empl_name AS emplName
		    , e.empl_email AS email
		    , pt.partName AS partName
		    , p.order_quantity AS orderQuantity
		    , i.inspection_num AS inspectionNum
		    , i.inspection_date AS inspectionDate
		    , i.inspection_quantity AS inspectionQuantity
		    , i.sample_quantity AS sampleQuantity
		    , NVL((SELECT SUM(ip.inspection_quantity) FROM inspection ip WHERE ip.order_num = p.order_num) / sp.requirement * 100, 0) AS progress
	    	, CASE WHEN (SELECT 1 FROM inspection ip 
				WHERE ip.order_num = i.order_num 
					AND ip.inspection_num = i.inspection_num 
					AND ip.inspection_num IN (SELECT ipr.inspection_num FROM inspection_result ipr WHERE ipr.order_num = ip.order_num))
				= 1 THEN '종료'
		<![CDATA[
    		WHEN sysdate < i.inspection_date THEN '시작 전'
    		WHEN sysdate > sp.deliverydate THEN '종료 후'
		]]>
    		ELSE '진행 중' END AS status
		FROM inspection i RIGHT JOIN purchase_order p ON p.order_num = i.order_num 
		    INNER JOIN employee e ON p.empl_num = e.empl_num
		    INNER JOIN tbl_contract ct ON p.contract_num = ct.contractno
		    INNER JOIN tbl_part pt ON ct.partcode = pt.partcode
		    INNER JOIN tbl_support sp ON sp.supportno = p.support_num
		
		<where>
			<trim prefixOverrides="OR">
				<foreach collection="list" item="unitNum">
					OR (i.order_num = #{ unitNum.orderNum } AND i.inspection_num = #{ unitNum.inspectionNum })
				</foreach>
			</trim>
		</where>
		ORDER BY i.inspection_num ASC
	</select>
	
	<select id="getInspection" resultType="com.mit.model.InspectionDTO">
		SELECT p.order_num AS orderNum
		    , e.empl_name AS emplName
		    , e.empl_email AS email
		    , cp.comemployee AS comEmployee
		    , cp.comemail AS comEmail
		    , pt.partName AS partName
		    , p.order_quantity AS orderQuantity
		    , i.inspection_num AS inspectionNum
		    , i.inspection_date AS inspectionDate
		    , i.inspection_quantity AS inspectionQuantity
		    , i.sample_quantity AS sampleQuantity
		    , NVL((SELECT SUM(ip.inspection_quantity) FROM inspection ip WHERE ip.order_num = p.order_num) / sp.requirement * 100, 0) AS progress
	    	, CASE WHEN (SELECT 1 FROM inspection ip 
				WHERE ip.order_num = i.order_num
					AND ip.inspection_num = i.inspection_num 
					AND ip.inspection_num IN (SELECT ipr.inspection_num FROM inspection_result ipr WHERE ipr.order_num = ip.order_num))
				= 1 THEN '종료'
		<![CDATA[
    		WHEN sysdate < i.inspection_date THEN '시작 전'
    		WHEN sysdate > sp.deliverydate THEN '종료 후'
		]]>
    		ELSE '진행 중' END AS status
		FROM purchase_order p INNER JOIN inspection i ON p.order_num = i.order_num 
		    INNER JOIN employee e ON p.empl_num = e.empl_num
		    INNER JOIN tbl_contract ct ON p.contract_num = ct.contractno
		    INNER JOIN tbl_company cp ON cp.code = ct.code
		    INNER JOIN tbl_part pt ON ct.partcode = pt.partcode
		    INNER JOIN tbl_support sp ON sp.supportno = p.support_num
		<trim prefix="WHERE">
			<include refid="searchInspection" />
		</trim>
		ORDER BY i.order_num DESC, i.inspection_num ASC
	</select>
	
	<select id="countInspection" resultType="long">
		SELECT COUNT(*)
		FROM purchase_order p INNER JOIN inspection i ON p.order_num = i.order_num 
		    INNER JOIN employee e ON p.empl_num = e.empl_num
		    INNER JOIN tbl_contract ct ON p.contract_num = ct.contractno
		    INNER JOIN tbl_part pt ON ct.partcode = pt.partcode
		    INNER JOIN tbl_support sp ON sp.supportno = p.support_num
		<trim prefix="WHERE">
			<include refid="searchInspection" />
		</trim>
	</select>
	
	<select id="getOrderNum" resultType="com.mit.model.InspectionDTO">
		SELECT DISTINCT p.order_num AS orderNum
			, NVL((SELECT MAX(ir.close) FROM inspection_result ir WHERE ir.order_num = p.order_num), 0) AS close 
			, CASE WHEN (SELECT 1 FROM inspection ip 
				WHERE ip.order_num = i.order_num
					AND ip.inspection_num = i.inspection_num 
					AND ip.inspection_num IN (SELECT ipr.inspection_num FROM inspection_result ipr WHERE ipr.order_num = ip.order_num))
				= 1 THEN '종료'
			<![CDATA[
	    		WHEN sysdate < i.inspection_date THEN '시작 전'
    			WHEN sysdate > sp.deliverydate THEN '종료 후'
			]]>
    			ELSE '진행 중' END AS status
		FROM purchase_order p LEFT JOIN inspection i ON p.order_num = i.order_num
			INNER JOIN tbl_support sp ON sp.supportno = p.support_num 
	</select>
	
	<select id="getInspectionResult" resultType="com.mit.model.InspectionDTO">
		SELECT ir.order_num AS orderNum
		    , ir.inspection_num AS inspectionNum
		    , ir.inspection_defect AS inspectionDefect
		    , ir.complement AS complement
		    , ir.close AS close
		FROM inspection_result ir
		WHERE ir.order_num = #{ orderNum } AND ir.inspection_num = #{ inspectionNum }
	</select>
	
	<insert id="insertInspectionSchedule">
		INSERT INTO inspection (order_num, inspection_num, inspection_date)
		VALUES (#{ orderNum }, (SELECT NVL((MAX(i.inspection_num) + 1), 1) AS nextNum FROM inspection i WHERE i.order_num = #{ orderNum }), #{ inspectionDate })
	</insert>
	
	<insert id="insertInspectionResult">
		INSERT INTO inspection_result (order_num, inspection_num, inspection_defect, complement, close, inspection_quantity, sample_quantity)
		VALUES (#{ orderNum }, #{ inspectionNum }, #{ inspectionDefect }, #{ complement }, #{ close }, #{ inspectionQuantity }, #{ sampleQuantity })
	</insert>
	
	<update id="updateInspectionQuantity">
		UPDATE inspection SET inspection_quantity = #{ inspectionQuantity }, sample_quantity = #{ sampleQuantity }
		WHERE order_num = #{ orderNum } AND inspection_num = #{ inspectionNum }
	</update>
	
	<select id="getNextInspectionNum" resultType="int">
		SELECT NVL((MAX(i.inspection_num) + 1), 1) AS nextNum FROM inspection i WHERE i.order_num = #{ orderNum }
	</select>
	<select id="getNextInspectionResultNum" resultType="int">
		SELECT NVL((MAX(ir.inspection_num) + 1), 1) AS nextNum FROM inspection_result ir WHERE ir.order_num = #{ orderNum }
	</select>
</mapper>